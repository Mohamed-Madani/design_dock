// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Resource {
  id          Int       @id @default(autoincrement())
  title       String    // Titre de la ressource
  description String?   // Description optionnelle
  imageUrl    String    // URL de l'image associée à la ressource
  link        String    // Lien vers la ressource
  tags        String[]  // Liste de tags sous forme de tableau de chaînes
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  createdAt   DateTime @default(now())
}

model Category {
  id        String     @id @default(cuid())
  name      String     @unique
  resources Resource[]
  createdAt DateTime   @default(now())
}

model NewsletterSubscriber {
  id          Int       @id @default(autoincrement())
  email       String    @unique // Email de l'utilisateur abonné à la newsletter
  frequency   String    // Fréquence choisie (e.g., "weekly", "monthly")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Suggestion {
  id        String   @id @default(cuid())
  email     String
  url       String
  status    String?   @default("pending")
  createdAt DateTime @default(now())
}

model Waitlist {
  id          Int       @id @default(autoincrement())
  email       String    @unique // Email de l'utilisateur inscrit à la waitlist
  createdAt   DateTime  @default(now())
}